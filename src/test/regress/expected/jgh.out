--
-- JGH Sorb performance
--
set optimize_unique_node to on;
CREATE TABLE jgh (i integer);
INSERT INTO jgh (i) SELECT 20000 * random() FROM generate_series(1, 20000);
VACUUM ANALYZE jgh;
-- external sort
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_hashagg to off;
set work_mem to 16384;
-- internal merge
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
-- internal quicksort
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
-- internal merge retry
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
-- internal quicksort retry
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
explain (costs off) SELECT distinct i FROM jgh;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_hashagg to off;
explain (costs off) SELECT distinct i FROM jgh;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

--set optimize_unique_node to off;
--explain (costs off) SELECT distinct i FROM jgh;
--set optimize_dedup_sort to off;
--explain (costs off) SELECT distinct i FROM jgh;
set enable_intmerge_sort to off;
explain (costs off) SELECT distinct i FROM jgh;
         QUERY PLAN          
-----------------------------
 Unique
   ->  Sort
         Sort Key: i
         ->  Seq Scan on jgh
(4 rows)

DROP TABLE jgh;
----------------------------------------
create table jgh (s text, i integer);
INSERT INTO jgh (s, i) SELECT concat(
		chr((100*random()+20)::int),
		chr((100*random()+20)::int)),
20000 * random() FROM generate_series(1, 20000);
VACUUM ANALYZE jgh;
set work_mem to 1024;
set enable_hashagg to on;
set optimize_dedup_sort to on;
set enable_intmerge_sort to on;
set optimize_unique_node to on;
-- 2-col sort
-- external sort
explain (costs off) SELECT * FROM jgh ORDER BY s, i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s, i
   ->  Seq Scan on jgh
(3 rows)

set enable_hashagg to off;
set work_mem to 16384;
-- internal merge
explain (costs off) SELECT * FROM jgh ORDER BY s, i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s, i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
-- internal quicksort
explain (costs off) SELECT * FROM jgh ORDER BY s, i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s, i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
-- internal merge retry
explain (costs off) SELECT * FROM jgh ORDER BY s, i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s, i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
-- internal quicksort retry
explain (costs off) SELECT * FROM jgh ORDER BY s, i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s, i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
set work_mem to 1024;
set enable_hashagg to on;
set optimize_dedup_sort to on;
set enable_intmerge_sort to on;
set optimize_unique_node to on;
-- 1-col sort
-- external sort
explain (costs off) SELECT * FROM jgh ORDER BY s;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s
   ->  Seq Scan on jgh
(3 rows)

set enable_hashagg to off;
set work_mem to 16384;
-- internal merge
explain (costs off) SELECT * FROM jgh ORDER BY s;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
-- internal quicksort
explain (costs off) SELECT * FROM jgh ORDER BY s;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
-- internal merge retry
explain (costs off) SELECT * FROM jgh ORDER BY s;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
-- internal quicksort retry
explain (costs off) SELECT * FROM jgh ORDER BY s;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
-- sort/unique
set work_mem to 1024;
set enable_hashagg to on;
explain (costs off) SELECT distinct s FROM jgh;
      QUERY PLAN       
-----------------------
 HashAggregate
   Group Key: s
   ->  Seq Scan on jgh
(3 rows)

set work_mem to 16384;
explain (costs off) SELECT distinct s FROM jgh;
      QUERY PLAN       
-----------------------
 HashAggregate
   Group Key: s
   ->  Seq Scan on jgh
(3 rows)

set enable_hashagg to off;
explain (costs off) SELECT distinct s FROM jgh;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s
   ->  Seq Scan on jgh
(3 rows)

--set optimize_unique_node to off;
--explain (costs off) SELECT distinct s FROM jgh;
--set optimize_dedup_sort to off;
--explain (costs off) SELECT distinct s FROM jgh;
set enable_intmerge_sort to off;
explain (costs off) SELECT distinct s FROM jgh;
         QUERY PLAN          
-----------------------------
 Unique
   ->  Sort
         Sort Key: s
         ->  Seq Scan on jgh
(4 rows)

DROP TABLE jgh;
----------------------------------------
-- larger table
CREATE TABLE jgh (i integer);
INSERT INTO jgh (i) SELECT 200000 * random() FROM generate_series(1, 200000);
VACUUM ANALYZE jgh;
set work_mem to 1024;
set enable_hashagg to on;
set optimize_dedup_sort to on;
set enable_intmerge_sort to on;
set optimize_unique_node to on;
-- external sort
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
set enable_hashagg to off;
set work_mem to 163840;
-- internal merge
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
-- internal quicksort
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
-- internal merge retry
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
-- internal quicksort retry
explain (costs off) SELECT * FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
explain (costs off) SELECT distinct i FROM jgh;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_hashagg to off;
explain (costs off) SELECT distinct i FROM jgh;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

--set optimize_unique_node to off;
--explain (costs off) SELECT distinct i FROM jgh;
--set optimize_dedup_sort to off;
--explain (costs off) SELECT distinct i FROM jgh;
set enable_intmerge_sort to off;
explain (costs off) SELECT distinct i FROM jgh;
         QUERY PLAN          
-----------------------------
 Unique
   ->  Sort
         Sort Key: i
         ->  Seq Scan on jgh
(4 rows)

DROP TABLE jgh;
----------------------------------------
create table jgh (s text, i integer);
INSERT INTO jgh (s, i) SELECT concat(
		chr((100*random()+20)::int),
		chr((100*random()+20)::int),
		chr((100*random()+20)::int),
		chr((100*random()+20)::int),
		chr((100*random()+20)::int)),
200000 * random() FROM generate_series(1, 200000);
VACUUM ANALYZE jgh;
set work_mem to 1024;
set enable_hashagg to on;
set optimize_dedup_sort to on;
set enable_intmerge_sort to on;
set optimize_unique_node to on;
-- external sort
explain (costs off) SELECT * FROM jgh ORDER BY s, i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s, i
   ->  Seq Scan on jgh
(3 rows)

set enable_hashagg to off;
set work_mem to 163840;
-- internal merge
explain (costs off) SELECT * FROM jgh ORDER BY s, i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s, i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
-- internal quicksort
explain (costs off) SELECT * FROM jgh ORDER BY s, i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s, i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
-- internal merge retry
explain (costs off) SELECT * FROM jgh ORDER BY s, i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s, i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to off;
-- internal quicksort retry
explain (costs off) SELECT * FROM jgh ORDER BY s, i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s, i
   ->  Seq Scan on jgh
(3 rows)

set enable_intmerge_sort to on;
explain (costs off) SELECT distinct s FROM jgh;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s
   ->  Seq Scan on jgh
(3 rows)

set enable_hashagg to off;
explain (costs off) SELECT distinct s FROM jgh;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: s
   ->  Seq Scan on jgh
(3 rows)

--set optimize_unique_node to off;
--explain (costs off) SELECT distinct s FROM jgh;
--set optimize_dedup_sort to off;
--explain (costs off) SELECT distinct s FROM jgh;
set enable_intmerge_sort to off;
explain (costs off) SELECT distinct s FROM jgh;
         QUERY PLAN          
-----------------------------
 Unique
   ->  Sort
         Sort Key: s
         ->  Seq Scan on jgh
(4 rows)

DROP TABLE jgh;
----------------------------------------
set work_mem to 1024;
set enable_hashagg to on;
set optimize_dedup_sort to on;
set enable_intmerge_sort to on;
set optimize_unique_node to on;
CREATE TABLE jgh (i integer);
INSERT INTO jgh (i) SELECT * FROM generate_series(1, 10);
INSERT INTO jgh (i) SELECT * FROM generate_series(1, 10);
INSERT INTO jgh (i) SELECT * FROM generate_series(1, 10000);
INSERT INTO jgh (i) SELECT * FROM generate_series(1, 10000);
VACUUM ANALYZE jgh;
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i;
         QUERY PLAN          
-----------------------------
 Sort
   Sort Key: i
   ->  HashAggregate
         Group Key: i
         ->  Seq Scan on jgh
(5 rows)

set enable_hashagg to off;
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

--set optimize_unique_node to off;
--explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i;
--
--set optimize_dedup_sort to off;
--explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i;
set enable_intmerge_sort to off;
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i;
         QUERY PLAN          
-----------------------------
 Unique
   ->  Sort
         Sort Key: i
         ->  Seq Scan on jgh
(4 rows)

set work_mem to 16384;
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i;
         QUERY PLAN          
-----------------------------
 Unique
   ->  Sort
         Sort Key: i
         ->  Seq Scan on jgh
(4 rows)

set enable_intmerge_sort to on;
--explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i;
--
--set optimize_dedup_sort to on;;
--explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i;
--
--set optimize_unique_node to on;
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i;
      QUERY PLAN       
-----------------------
 Sort
   Sort Key: i
   ->  Seq Scan on jgh
(3 rows)

set enable_hashagg to on;
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i;
         QUERY PLAN          
-----------------------------
 Sort
   Sort Key: i
   ->  HashAggregate
         Group Key: i
         ->  Seq Scan on jgh
(5 rows)

--
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i LIMIT 10;
            QUERY PLAN             
-----------------------------------
 Limit
   ->  Sort
         Sort Key: i
         ->  HashAggregate
               Group Key: i
               ->  Seq Scan on jgh
(6 rows)

set enable_hashagg to off;
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i LIMIT 10;
         QUERY PLAN          
-----------------------------
 Limit
   ->  Sort
         Sort Key: i
         ->  Seq Scan on jgh
(4 rows)

--set optimize_unique_node to off;
--explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i LIMIT 10;
--
--set optimize_dedup_sort to off;
--explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i LIMIT 10;
set enable_intmerge_sort to off;
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i LIMIT 10;
            QUERY PLAN             
-----------------------------------
 Limit
   ->  Unique
         ->  Sort
               Sort Key: i
               ->  Seq Scan on jgh
(5 rows)

set work_mem to 16384;
set enable_hashagg to on;
set optimize_dedup_sort to on;
set enable_intmerge_sort to on;
set optimize_unique_node to on;
--
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i LIMIT 500;
            QUERY PLAN             
-----------------------------------
 Limit
   ->  Sort
         Sort Key: i
         ->  HashAggregate
               Group Key: i
               ->  Seq Scan on jgh
(6 rows)

set enable_hashagg to off;
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i LIMIT 500;
         QUERY PLAN          
-----------------------------
 Limit
   ->  Sort
         Sort Key: i
         ->  Seq Scan on jgh
(4 rows)

--set optimize_unique_node to off;
--explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i LIMIT 500;
--
--set optimize_dedup_sort to off;
--explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i LIMIT 500;
set enable_intmerge_sort to off;
explain (costs off) SELECT DISTINCT i FROM jgh ORDER BY i LIMIT 500;
            QUERY PLAN             
-----------------------------------
 Limit
   ->  Unique
         ->  Sort
               Sort Key: i
               ->  Seq Scan on jgh
(5 rows)

DROP TABLE jgh;
